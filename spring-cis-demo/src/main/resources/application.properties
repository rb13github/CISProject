spring.data.mongodb.uri= mongodb://localhost:27017/db
logging.level.root=DEBUG

greeter.message=Welcome to CIS
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.url=jdbc:h2:file:C:/data/h2db
#spring.jpa.database-platform=h2
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.generate-ddl=true

########################################
#open connect id properties with google as provider
#spring.security.oauth2.client.registration.google.client-id=579428760008-gulavegv3up3mdaqnl5vlo097f2512sh.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=dd2TR9TEebSMNOXRVK4I9Re-

spring.security.oauth2.client.registration.google.client-id=1080824493557-9mov0ln13k71oi8p0g11mgsf5bttvcuj.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=r1J4ooIiU_Z3wpShC6l7q6xw
spring.security.oauth2.client.registration.google.client-authentication-method=basic
spring.security.oauth2.client.registration.google.provider=google-oauth
spring.security.oauth2.client.registration.google.client-name=sboot-receive-order
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9060/login/oauth2/code/google
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/cisview/customerview
spring.security.oauth2.client.registration.google.authorization-grant-type: authorization_code
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=openid, profile
# add openid later
spring.security.oauth2.client.provider.google-oauth.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google-oauth.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google-oauth.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google-oauth.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
#spring.security.oauth2.client.provider.google.user-name-attribute=profile

#spring.security.oauth2.resource.filterorder=3
spring.security.filter.order=3

############################
